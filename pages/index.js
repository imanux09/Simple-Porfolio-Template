import axios from "axios";
import { useRef } from "react";
import Head from "next/head";
import AboutMe from "../Components/AboutMe/AboutMe";
import Contact from "../Components/Contact/Contact";
import CV from "../Components/CV/CV";
import Introduction from "../Components/Introduction/Introduction";
import Projects from "../Components/Projects/Projects";
import { useRouter } from "next/router";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import nextI18NextConfig from "../next-i18next.config.js";

export default function Home(props) {
  const { data } = props;
  const AboutRef = useRef();
  const IntroductionRef = useRef();
  const ContactRef = useRef();
  const CVRef = useRef();
  const ProjectsRef = useRef();
  const router = useRouter();
  return (
    <div>
      <Head>
        <title>iManux Dev</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Introduction
        IntroductionRef={IntroductionRef}
        AboutRef={AboutRef}
        data={data}
      ></Introduction>

      <AboutMe AboutRef={AboutRef} data={data}></AboutMe>

      <Projects ProjectsRef={ProjectsRef} data={data}></Projects>

      <CV CVRef={CVRef} data={data}></CV>

      <Contact ContactRef={ContactRef} data={data}></Contact>
    </div>
  );
}
export async function getStaticProps(context) {
  const response = await axios.post(process.env.NEXT_PUBLIC_API_GRAPHQL, {
    query: `     query{
      porfolio(locale: "${context.locale}"){
        data{
          attributes{
            mainTitle
            mainSubtitle
            nameAbout
            subtitleAbout
            projects{
              data{
                attributes{
                  name
                  subtitle
                  photo{
                    data{
                      attributes{
                        url
                      }                    }
                  }
                  tools{
                    data{
                      attributes{
                        name
                      }
                    }
                  }
                  github
                  documentation
                  demo
                }
              }
            }
            photo{data{attributes{url}}}
						CV{
              data{
                attributes{
                  url
                }
              }
            }
            description
            email
            linkedinUrl
            gitHubUrl
          }
        }
      }
    }`,
  });

  if (response.status === 200) {
    return {
      props: {
        data: response.data.data.porfolio.data.attributes,
        ...(await serverSideTranslations(
          context.locale,
          ["common"],
          nextI18NextConfig
        )),
      },
    };
  }
}
